unit unConsultaClientes;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Buttons, Grids, DBGrids, ExtCtrls, ActnList;

type
  TF_ConsultaClientes = class(TForm)
    CbPesq: TComboBox;
    Editcon: TEdit;
    DBGrid1: TDBGrid;
    botaoPesq: TBitBtn;
    Panel1: TPanel;
    Label1: TLabel;
    Label2: TLabel;
    ActionList1: TActionList;
    Act_consultar: TAction;
    procedure CbPesqChange(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure Act_consultarExecute(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  F_ConsultaClientes: TF_ConsultaClientes;

implementation

{$R *.dfm}

uses
  undmprincipal;

procedure TF_ConsultaClientes.Act_consultarExecute(Sender: TObject);
begin
      if CbPesq.ItemIndex = 0 then
    Begin
      With DMPrincipal do
        begin

          qryClientes.Close;
          qryClientes.sql.text:='Select * from clientes';
          qryClientes.Open;
        end;
    end;
     if CbPesq.ItemIndex = 1 then
    Begin
      With DMPrincipal do
        begin


            qryClientes.Close;
            qryclientes.SQL.text :=  'select * from CLIENTES where CLI_IDCLIENTE = '+ QuotedStr(EditCon.Text);
            qryClientes.Open;

        end;
    end;
     if CbPesq.ItemIndex = 2 then
    Begin
      With DMPrincipal do
        begin

          qryClientes.close;
          qryclientes.SQL.text := 'select * from CLIENTES where CLI_NOME CONTAINING '+ QuotedStr(EditCon.Text);
//          qryclientes.SQL.text := 'select * from CLIENTES where CLI_NOME STARTING WITH '+ QuotedStr(EditCon.Text);
          qryClientes.Open;

        end;
    end;
end;

procedure TF_ConsultaClientes.CbPesqChange(Sender: TObject);
begin
  Editcon.Clear;
  Editcon.SetFocus;
end;

procedure TF_ConsultaClientes.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  Action := caFree;
end;

end.
